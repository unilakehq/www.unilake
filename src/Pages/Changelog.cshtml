@page "/Changelog"
@attribute [RenderStatic]
@model www.unilake.Pages.ChangelogModel
@{
    ViewData["Title"] = "Unilake.Www Changelog";
}
<div class="bg-white">
    <div class="w-full mx-auto lg:max-w-8xl md:max-w-5xl px-L md:py-XXXL py-XXL">
        <div class="grid grid-cols-1 md:gap-[92px] gap-XL">
            <div class="flex flex-col gap-M">
                <span class="xl:text-headline2 md:text-15 md:leading-[48px] text-headline3 text-brand">Changelog</span>
                <span class="text-Regular text-bodyText">Updates, additions and improvements to Unilake</span>
            </div>
            <div class="flex flex-col gap-[5px]">
                <div class="grid grid-cols-1 gap-[6px] min-h-[58px] realative pr-[22px]">
                    <div class="col-span-3 min-h-[58px] bg-backgroundTertiary rounded-r-[12px] flex items-center changelog-main-date">
                        <h1 class="text-H4 text-headLines ml-[25px]">March 2025</h1>
                    </div>
                    <div class="h-[80px] border-l-[6px] border-[#F1F1F1]">
                    </div>
                </div>
                <div class="lg:hidden block h-[40px] border-l-[6px] border-[#F1F1F1] mt-[40px]">
                </div>
                <div class="flex flex-col gap-[40px]">
                    <div class="flex lg:flex-row flex-col lg:gap-[92px] gap-[26px] lg:px-0 px-[26px]">
                        <div class="md:w-[292px] relative lg:mx-0 -mx-[26px]">
                            <div class="changelog-date flex flex-col gap-[11px]">
                                <h4 class="ml-[27px] text-Regular text-info">13 March</h4>
                                <h2 class="ml-[27px] text-H2 font-[700] text-bodyText">Project Introduction</h2>
                                <button class="ml-[27px] py-S px-SM w-fit h-fit rounded-[6px] bg-[#619DFF5C] text-bravo text-Small flex items-center text-center justify-center">
                                   Project
                                </button>
                            </div>
                            <div class="lg:h-full changelog-date-bottom-div"></div>
                        </div>
                        <div class="relative w-full bg-neutral p-L rounded-S h-95 lg:-mt-XL lg:ml-0 change-log-div">
                            <div class="flex flex-col change-log-card gap-L">
                                <img src="./img/changelog/julien-tromeur-2t0F_vmRDpU-unsplash.jpg" class="rounded-S object-fill h-[300px]">
                                <h2 class="text-headline3 text-headLines"><a href="https://docs.unilake.com/blog/initial_post">Introducing Unilake, the self-hosted unified data and AI platform</a></h2>
                                <h3 class="text-Regular text-bodyText line-clamp-5">
Building your data and AI platform can be a significant endeavor. Beyond the business challenges such as formulating compelling business  cases and securing buy-in from all stakeholders, there are also technical hurdles related to designing, implementing, and managing your future data ecosystem. Numerous decisions must be made, including selecting appropriate technologies, determining where to deploy your...
                                    <a class="" href="about#">
                                        @await Html.PartialAsync("Logos/ReadArticleLogo")
                                    </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function showMore(event) {
        var textElement = event.currentTarget.querySelector('h1');
        if (textElement.textContent.trim() === "Show more") {
            textElement.textContent = "Show less";
        } else {
            textElement.textContent = "Show more";
        }
        // event.currentTarget.classList.toggle('show-more-focused');
        // event.currentTarget.classList.toggle('show-more');
        event.currentTarget.children[1].classList.toggle('rotate-180');
        var cards = document.querySelectorAll('#show-hide-card');
        cards.forEach(card => {
            if (card.classList.contains('hidden')) {
                card.classList.add('block')
                card.classList.remove('hidden')
            } else {
                card.classList.add('hidden')
                card.classList.remove('block')
            }
            console.log(card, '1')
        })
    }
    function toggleTag(event) {
        const currentTag = event.currentTarget;
        if (currentTag.classList.contains('active-tag')) {
            currentTag.classList.remove('active-tag');
            currentTag.classList.add('inactive-tag');
        } else {
            currentTag.classList.remove('inactive-tag');
            currentTag.classList.add('active-tag');
        }
    }
</script>
